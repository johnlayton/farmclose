#!/usr/bin/env bash
# Summary: List all Node versions available to jsenv
# Usage: jsenv versions [--bare]
#
# Lists all Node versions found in `$JSENV_ROOT/versions/*'.

set -e
[ -n "$JSENV_DEBUG" ] && set -x

if [ "$1" = "--bare" ]; then
  hit_prefix=""
  inst_prefix=""
  miss_prefix=""
  current_version=""
  include_system=""
else
  hit_prefix="* "
  inst_prefix="+ "
  miss_prefix="  "
  current_version="$(jsenv-version-name || true)"
  include_system="1"
fi

print_version() {
  if [ "$1" == "$current_version" ]; then
    echo "${hit_prefix}${inst_prefix}$(jsenv-version 2>/dev/null) $1"
  elif [[ -d  "${JSENV_ROOT}/versions/$1" ]]; then
    echo "${miss_prefix}${inst_prefix}$1"
  else
    echo "${miss_prefix}${miss_prefix}$1"
  fi
}

# Include "system" in the non-bare output, if it exists
if [ -n "$include_system" ] && JSENV_VERSION=system jsenv-which node >/dev/null 2>&1; then
  print_version system
fi

for path in $(curl --silent \
  --header "Authorization: Bearer ${GITHUB_API_TOKEN}" \
  --header "Accept: application/vnd.github+json" \
  --request GET https://api.github.com/repos/nodejs/node/releases\?per_page\=400 \
  | jq -r '.[] | .tag_name |= (sub("v";"")) | .tag_name' | sort -n); do
  print_version "node-${path##*/}"
done


#https://nodejs.org/dist
#
#for path in `curl -s -X GET https://semver.io/node/versions`; do
# print_version "node-${path##*/}"
#done
#
#for path in `curl -s -X GET https://semver.io/node/versions`; do
# print_version "node-${path##*/}"
#done
#
#for path in `curl -s -X GET https://semver.io/iojs/versions`; do
# print_version "iojs-${path##*/}"
#done
